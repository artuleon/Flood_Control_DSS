from hec.script import *
from hec.heclib.dss import *
from hec.dataTable import *
import java


#  Open the file and get the data
try:  
  dssFile = HecDss.open("C:\Arturo_final\SOFTWARE_FINAL\DSS_Flood_2022\DSSWetland_Metric\RAS_HMS_Original_project\CypressHMS\Run_1.dss")
  elev1= dssFile.get("//WL-300/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  elev2= dssFile.get("//WL-310/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  elev3= dssFile.get("//WL-330/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  elev4= dssFile.get("//WL-380/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  elev5= dssFile.get("//WL-390/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  elev6= dssFile.get("//WL-400/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  elev7= dssFile.get("//WL-410/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  elev8= dssFile.get("//WL-420/ELEVATION/15APR2016/1HOUR/RUN:RUN 1/")
  inflow1= dssFile.get("//WL-300/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  inflow2= dssFile.get("//WL-310/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  inflow3= dssFile.get("//WL-330/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  inflow4= dssFile.get("//WL-380/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  inflow5= dssFile.get("//WL-390/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  inflow6= dssFile.get("//WL-400/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  inflow7= dssFile.get("//WL-410/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  inflow8= dssFile.get("//WL-420/FLOW-COMBINE/15APR2016/1HOUR/RUN:RUN 1/")
  stor1= dssFile.get("//WL-300/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  stor2= dssFile.get("//WL-310/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  stor3= dssFile.get("//WL-330/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  stor4= dssFile.get("//WL-380/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  stor5= dssFile.get("//WL-390/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  stor6= dssFile.get("//WL-400/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  stor7= dssFile.get("//WL-410/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  stor8= dssFile.get("//WL-420/STORAGE/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow1= dssFile.get("//WL-300/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow2= dssFile.get("//WL-310/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow3= dssFile.get("//WL-330/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow4= dssFile.get("//WL-380/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow5= dssFile.get("//WL-390/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow6= dssFile.get("//WL-400/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow7= dssFile.get("//WL-410/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  totalOutflow8= dssFile.get("//WL-420/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain1= dssFile.get("//WL-300-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain2= dssFile.get("//WL-310-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain3= dssFile.get("//WL-330-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain4= dssFile.get("//WL-380-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain5= dssFile.get("//WL-390-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain6= dssFile.get("//WL-400-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain7= dssFile.get("//WL-410-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  releaseMain8= dssFile.get("//WL-420-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping1= dssFile.get("//WL-300-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping2= dssFile.get("//WL-310-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping3= dssFile.get("//WL-330-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping4= dssFile.get("//WL-380-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping5= dssFile.get("//WL-390-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping6= dssFile.get("//WL-400-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping7= dssFile.get("//WL-410-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
  spillOvertopping8= dssFile.get("//WL-420-RELEASE/FLOW/15APR2016/1HOUR/RUN:RUN 1/")
except java.lang.Exception, e :
  #  Take care of any missing data or errors
   MessageBox.showError(e.getMessage(), "Error reading data")

#  Add Data
datasets = java.util.Vector()
datasets.add(elev1)
datasets.add(elev2)
datasets.add(elev3)
datasets.add(elev4)
datasets.add(elev5)
datasets.add(elev6)
datasets.add(elev7)
datasets.add(elev8)
datasets.add(inflow1)
datasets.add(inflow2)
datasets.add(inflow3)
datasets.add(inflow4)
datasets.add(inflow5)
datasets.add(inflow6)
datasets.add(inflow7)
datasets.add(inflow8)
datasets.add(stor1)
datasets.add(stor2)
datasets.add(stor3)
datasets.add(stor4)
datasets.add(stor5)
datasets.add(stor6)
datasets.add(stor7)
datasets.add(stor8)
datasets.add(totalOutflow1)
datasets.add(totalOutflow2)
datasets.add(totalOutflow3)
datasets.add(totalOutflow4)
datasets.add(totalOutflow5)
datasets.add(totalOutflow6)
datasets.add(totalOutflow7)
datasets.add(totalOutflow8)
datasets.add(releaseMain1)
datasets.add(releaseMain2)
datasets.add(releaseMain3)
datasets.add(releaseMain4)
datasets.add(releaseMain5)
datasets.add(releaseMain6)
datasets.add(releaseMain7)
datasets.add(releaseMain8)
datasets.add(spillOvertopping1)
datasets.add(spillOvertopping2)
datasets.add(spillOvertopping3)
datasets.add(spillOvertopping4)
datasets.add(spillOvertopping5)
datasets.add(spillOvertopping6)
datasets.add(spillOvertopping7)
datasets.add(spillOvertopping8)

#  For this code, jython sees a List before a Vector
#list = java.awt.List()
list = []
list.append(datasets)

table = HecDataTableToExcel.newTable()

#  If you want to run Excel with a specific name and not a temp name:
# table.runExcel(list, "C:\DSSTest_Wetland_optimization\HMS_RAS\Wetlands_RAS_Optimization\RAS_HMS_folders\Cypress1\CypressHMS\wetland_mass_balance.xls")
#  Or, if you would just rather create an Excel file, but not run it:
table.createExcelFile(list, "C:\Arturo_final\SOFTWARE_FINAL\DSS_Flood_2022\DSSWetland_Metric\RAS_HMS_Original_project\CypressHMS\wetland_mass_balance.xls")
